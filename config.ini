[DEFAULT]
seed = 1
#does this use a multiplication factor based on a certain point?
multF = False
number_of_runs = 10
[NETWORK_SHAPE]
#Array the represents the sizes of the hidden nodes.
hsize = 4
[NETWORK_ACT]
#Activation functions for each layer. 1 is TANH, 2 is SIGMOID, 3 is RELU, 0 is none.
act_fun =   3,0
#Network characteristic
[NETWORK_PARAMS]
learning_rate = 0.001
learning_rate_policy = 0.001
learning_rate_critic = 0.001
rec_layer_in = 0
rec_layer_out = 0
batch_size = 1
gamma = 1
blossv = 0.1
eps = 1e-8
weight_decay=0.0
#Network to use
## 0 = Policy Gradient
## 1 = Actor Critic
## 2 = Actor Critic with Reccurent
## 3 = Actor Critic with Hebbian
network = 0
#Do we want the network to learn
learn = True
#Other Network characteristics
[SAVING]
#The name of the network will be saved and it's location
save_name = AC_Hebb_10runs_justBalance_test3_20k
data_path = ./SavedData/
[EPISODE]
render = False
render_eps = 100
target_range_lower = 3
target_range_upper = 3
save_every = 100
max_episodes = 20000
length_of_episodes = 1000

[END_CONDITIONS]
end_num_runs = 100
#percent of max score to call it a solved run
end_threshold = 0.95
#percent of runs that must be solved within the end_num_runs to quit
end_percent = 0.90